#spring.kafka.consumer.bootstrap-servers=localhost:9092
#spring.kafka.consumer.bootstrap-servers=kafka.nonprod.ta.xom.vloc-dev.com:9092
#spring.kafka.consumer.group-id=befan

spring.kafka.consumer.bootstrap-servers=mini:9092
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=manual-immediate

ta.conciliador.request.thread.pool.size=3

# Seems 1 is the only value to assure good pause/resume without rebalancing, wich makes a lote of sense.
spring.kafka.consumer.max-poll-records=1
spring.kafka.consumer.properties.max.poll.interval.ms=2000

spring.kafka.producer.bootstrap-servers=mini:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

server.port=9000

ta.conciliator.batch.kafka.queue=conciliador_request
ta.conciliator.batch.kafka.groupId=conciliador
